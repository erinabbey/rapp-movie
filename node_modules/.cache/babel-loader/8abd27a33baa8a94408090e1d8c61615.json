{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\rapp\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TodoItem from './TodoItem';\nimport Contactcard from './TodoItem'; //import Joke from './Joke'\n//import JokesData from './JokesData'\n\nimport Productitem from './SchoolProduct';\nimport Product from './Product';\nimport todoData from './todoData';\n\nvar ReactCSSTransitionGroup = require('react-addons-css-transition-group'); // mapping component practice\n\n\nfunction App() {\n  const productComponent = Productitem.map(item => /*#__PURE__*/React.createElement(Product, {\n    key: item.id,\n    product: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 52\n    }\n  }));\n  const todoComponent = todoData.map(todo => /*#__PURE__*/React.createElement(TodoItem, {\n    key: todo.id,\n    todo: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 45\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 1\n    }\n  }, productComponent, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }\n  }), todoComponent);\n}\n\nexport default App; //import Header from 'header.js'\n\n{\n  /*\n  import PropTypes from 'prop-types'\n  import ReactDOM from 'react-dom'\n  import { Component } from 'react'\n  import { connect } from 'react-redux'\n  import { addTodo } from '/actions/actions'\n  import AddTodo from '/components/AddTodo.js'\n  import TodoList from '/components/TodoList.js'\n  */\n}\n{\n  /*\n  class Tablerow extends React.Component {\n    render() {\n       return (\n          <tr>\n             <td>{this.props.data.id}</td>\n             <td>{this.props.data.name}</td>\n             <td>{this.props.data.age}</td>\n          </tr>\n       );\n    }\n  }\n  class Header extends React.Component{\n   render(){\n     return(\n       <div>\n       <h1>React Component</h1>\n       </div>\n       );\n   }\n  }\n  class Content extends React.Component{\n   render(){\n     return(\n       <div>\n       <h2>Content</h2>\n       <p>this is content</p>\n       </div>\n       );\n   }\n  }\n  */\n}\n{\n  /*React state */\n}\n{\n  /*\n  class showData extends React.Component{\n   constructor(props){\n     super(props);\n     this.state= {\n       header: \"Header from state\",\n       footer: \"Footer from state\"\n      }\n   }\n   render(){\n     return(\n     <div>\n     <Header/>\n     <h1>{this.state.header}</h1>\n     <h2>{this.state.footer}</h2>\n     </div>\n     );\n   }\n  }\n  class App extends React.Component{\n   \n       constructor(){\n     super();\n    this.state = {\n          data: \n          [\n             {\n                \"id\":1,\n                \"name\":\"Foo\",\n                \"age\":\"20\"\n             },\n             {\n                \"id\":2,\n                \"name\":\"Bar\",\n                \"age\":\"30\"\n             },\n             {\n                \"id\":3,\n                \"name\":\"Baz\",\n                \"age\":\"40\"\n             }\n          ]\n       }\n    }\n    render() {\n       return (\n          <div>\n             <Header/>\n             <table>\n                <tbody>\n                   {this.state.data.map((person, i) => <Tablerow key = {i} \n                      data = {person} />)}\n                </tbody>\n             </table>\n           </div>\n       );\n    }\n       \n  }\n  */\n}\n{\n  /*-- Props Overview\n  class App extends React.Component{\n   constructor(props){\n     super(props);\n     this.state ={\n       header:\"Header from props\",\n       footer: \"Footer from props\"\n     }\n   }\n   render(){\n     return(\n       <div>\n       <Xeader headerprops = {this.state.header}/>\n       <Xooter footerprops = {this.state.footer}/>\n       </div>\n       );\n   }\n  }\n  class Xeader extends React.Component{\n   render(){\n     return(\n         <div>\n         <h2>{this.props.headerprops}</h2>\n         </div>\n       );\n   }\n  }\n  class Xooter extends React.Component{\n   render(){\n     return(\n       <div>\n       <h3>{this.props.footerprops}</h3>\n       </div>\n       );\n   }\n  }\n  */\n}\n{\n  /* default props \n  App.defaultProps = {\n    headerProp: \"Header from props...\",\n    contentProp:\"Content from props...\"\n  }\n  */\n}\n{\n  /* Prop validatation\n  class App extends React.Component{\n   render(){\n     return(\n       <div>\n       <h3>Array: {this.props.propArray}</h3>\n       <h3>Bool: {this.props.propBool ? \"true\":\"false\"}</h3>\n       <h3>Func: {this.props.propFunc(3)}</h3>\n       <h3>Number: {this.props.propNumber}</h3>\n       <h3>String: {this.props.propString}</h3>\n       <h3>Object:{this.props.propObject.object1}</h3>\n       <h3>Object: {this.props.propObject.object2}</h3>\n       </div>\n        );\n   }\n  }\n  App.propTypes={\n    propArray: PropTypes.array.isRequired,\n   propBool: PropTypes.bool.isRequired,\n   propFunc: PropTypes.func,\n   propNumber: PropTypes.number,\n   propString: PropTypes.string,\n   propObject: PropTypes.object\n  }\n  App.defaultProps ={\n   propArray: [1,2,3,4,5],\n   propBool: true,\n   propFunc: function(e){return e},\n   propString:\"Ngoc Huyen Nguyen\",\n   propNumber: 12,\n   propObject: {\n     object1: \"Ngoc Huyen\",\n     object2: \"ngoc huyen nguyen\"\n   }\n  }*/\n}\n{\n  /* Set State\n  class App extends React.Component{\n   constructor(){\n     super();\n     this.state= {\n       data:[]\n     }\n     this.setStateHandler = this.setStateHandler.bind(this);\n   };\n   setStateHandler(){\n     var item = \"setState\"\n     var myArray = this.state.data.slice();\n     myArray.push(item);\n     this.setState({data:myArray})\n   };\n   render(){\n     return(\n         <div>\n         <button onClick ={this.setStateHandler}>Set State</button>\n         <h3> State Array: {this.state.data}</h3>\n         </div>\n       );\n   }\n  }*/\n}\n{\n  /* Force Update\n  class App extends React.Component{\n   constructor(){\n     super();\n     this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n   };\n   forceUpdateHandler(){\n     this.forceUpdate();\n   };\n   render(){\n     return(\n       <div>\n       <button onClick ={this.forceUpdateHandler}>force update</button>\n       <h3>random number: {Math.random()}</h3>\n       </div>\n       );\n   }\n  }\n  */\n}\n{\n  /* Find dom node \n  class App extends React.Component{\n   constructor(){\n     super();\n     this.findDomNodeHandler = this.findDomNodeHandler.bind(this);\n    };\n   findDomNodeHandler(){\n     var myDiv = document.getElementById('myDiv');\n     ReactDOM.findDOMNode(myDiv).style.color='green';\n   }\n   render(){\n     return(\n       <div>\n       <button onClick ={this.findDomNodeHandler}>Find Dome Node</button>\n         <div id= \"myDiv\"> Node</div>\n         </div>\n        );\n   }\n  }\n  */\n}\n{\n  /*props validation\n  class App extends React.Component{\n   constructor(props){\n     super(props);\n     this.state = {\n       data: 0\n     }\n     this.setNewNumber = this.setNewNumber.bind(this)\n   };\n   setNewNumber(){\n     this.setState({data:this.state.data +1})\n   }\n   render(){\n     return(\n       <div>\n       <button onClick={this.setNewNumber}>Increment value</button>\n       <Content myNumber = {this.state.data}></Content>\n       </div>\n       );\n   }\n  }\n  class Content extends React.Component{\n   componentWillMount() {\n     console.log('Component will mount')\n   }\n   componentDidMount() {\n     console.log('Component dis mount')\n   }\n   componentWillReceiveProps(newProps){\n     console.log('component will receive props')\n   }\n   shouldComponentUpdate(newProps, newState){\n     return true;\n   }\n   componentWillUpdate(nextProps, nextState){\n     console.log('component will update')\n   }\n   componentDidUpdate(prevProps, prevState){\n     console.log('component did update')\n   }\n   componentWillUnmount(){\n     console.log('component will unmount')\n   }\n   render(){\n     return(\n       <div>\n       <h3>{this.props.myNumber}</h3>\n       </div>\n       );\n   }\n  }\n  */\n}\n{\n  /* simple example if reacjs -form\n  class App extends React.Component{\n   constructor(props){\n     super(props);\n     this.state={\n       data: 'input value, change it'\n     }\n     this.updateState= this.updateState.bind(this)\n   }\n   updateState(e){\n     this.setState({data:e.target.value});\n   }\n   render(){\n     return(\n       <div>\n       <input type =\"text\" value={this.state.data} onChange={this.updateState}/>\n       <h3>{this.state.data}</h3>\n       </div>\n        );\n   }\n  }\n  --complex example reactjs-form\n  class App extends React.Component{\n   constructor(props){\n     super(props);\n     this.state={\n       data: 'change text'\n     }\n       this.updateState=this.updateState.bind(this);\n   }\n   updateState(e){\n     this.setState({data:e.target.value});\n   }\n   render(){\n     return(\n       <div>\n       <Content dataprop={this.state.data}\n       updatedataprops ={this.updateState}></Content>\n       </div>\n        );\n   }\n  }\n  class Content extends React.Component{\n   render(){\n     return(\n       <div>\n       <input type = \"text\" value={this.props.dataprop} \n       onChange = {this.props.updatedataprops}/>\n       <h3>{this.props.dataprop}</h3>\n       </div>\n        );\n   }\n  }*/\n}\n{\n  /*reactjs-events, \n  class App extends React.Component{\n   constructor(props){\n     super(props);\n     this.state = {\n       data:'input data'\n     }\n     this.updateState  = this.updateState.bind(this);\n   }\n   updateState(){\n     this.setState({data:'Data updated'})\n   }\n   render(){\n     return(\n       <div>{/* \n       <button onClick={this.updateState}>Click</button>\n       <h3>{this.state.data}</h3>*/\n}\n{\n  /*\n  <Content dataprops={this.state.data}\n  updateStateProps = {this.updateState}></Content>\n  </div>\n  );\n  }\n  }\n  class Content extends React.Component{\n  render(){\n  return(\n  <div>\n  <button onClick ={this.props.updateStateProps}>Click</button>\n  <h3>{this.props.dataprops}</h3>\n  </div>\n  );\n  }\n  } \n  */\n}\n{\n  /*reactjs-Refs\n  class App extends React.Component{\n   constructor(props){\n     super(props);\n     this.state={\n       data:''\n     }\n     this.updateState= this.updateState.bind(this);\n     this.clearInput= this.clearInput.bind(this);\n   }\n   updateState(e){\n     this.setState ({data: e.target.value});\n   }\n   clearInput(){\n     this.setState({data:''});\n     ReactDOM.findDOMNode(this.refs.Input).focus();\n   }\n   render(){\n     return(\n       <div>\n       <input  value={this.state.data} onChange={this.updateState}\n       ref=\"Input\"/>\n       <button onClick={this.clearInput}>Clear</button>\n       <h4>{this.state.data}</h4>\n       </div>\n       );\n   }\n  }*/\n}\n{\n  /*reactjs-keys*/\n}\n{\n  /*\n  class App extends React.Component{\n   constructor(){\n     super();\n     this.state={\n       data:[\n       {\n       id: 1,\n       name: 'Ngoc Huyen'\n       },\n       {\n       id: 2,\n       name: 'Erin Abbey'\n       },\n       {\n       id: 3,\n       name: 'Jk'\n       }\n       ]\n     }\n   }\n   render(){\n     return(\n       <div>\n       <div>{this.state.data.map((dynamicComponent, i)=><Content key={i}componentData={dynamicComponent}/>)}\n       </div>\n       </div>\n        );\n   }\n  }\n   class Content extends React.Component{\n   render(){\n     return(\n       <div>\n       <div>{this.props.componentData.id}</div>\n       <div>{this.props.componentData.name}</div>\n       </div>\n       );\n   }\n  }\n  export default App;*/\n}\n{\n  /*\n  class App extends Component {\n    render() {\n       const { dispatch, visibleTodos } = this.props\n       \n       return (\n          <div>\n             <AddTodo onAddClick = {text =>dispatch(addTodo(text))} />\n             <TodoList todos = {visibleTodos}/>\n          </div>\n       )\n    }\n  }\n  function select(state) {\n    return {\n       visibleTodos: state.todos\n    }\n  }\n  export default connect(select)(App);\n  */\n}\n{\n  /*\n  class App extends React.Component{\n   constructor(props){\n     super(props);\n     this.state={\n       data: ['Erin Abbey', 'Nguyen Ngoc Huyen', 'Jvf']\n     }\n     this.handledAdd = this.handledAdd.bind(this);\n   };\n   handledAdd(){\n     var newitem = this.state.data.concat([prompt('Add new item')]);\n     this.setState ({data: newitem});\n   }\n   handledRemove(i){\n     var newitem = this.state.data.slice();\n     newitem.splice(i, 1);\n     this.setState({data: newitem});\n   }\n   render(){\n     var data = this.state.data.map(function(item, i){\n       return(\n         <div key = {item} onClick = {this.handledRemove.bind(this,  i)}>{item}</div>\n         );\n       }.bind(this));\n     \n     return(\n     <div>\n     <button onClick = {this.handledAdd}>Add item</button>\n     <ReactCSSTransitionGroup transitionName = \"example\" transitionEnterTimeout ={500} transitionLeaveTimeout ={500}>\n     {data}</ReactCSSTransitionGroup>\n     </div>\n     );\n   }\n  }*/\n}\n{\n  /*\n  function App()  {\n  \n     const date = new Date()\n     const hours = date.getHours()\n     const setstyle={\n       color: \"blue\",\n       backgroundColor: \"lightgray\",\n       fontSize: \"14px\",\n       margin: \"14px 16px\"\n     }\n     \n     const jokeComponent = JokesData.map(joke => <Joke key ={joke.id} question={joke.question} answer = {joke.answer}/>)\n      console.log(doubled)\n     let timeday\n     let flag\n     if(hours < 12){\n       timeday =\"morning\"\n       flag =\"AM\"\n       setstyle.color= \"blue\"\n     }\n     else if(hours >12 && hours <18){\n       timeday =\"afternoon\"\n       setstyle.color= \"green\"\n       flag =\"PM\"\n     }\n     else{\n       timeday=\"night\"\n       setstyle.color= \"green\"\n       flag =\"PM\"\n     }\n     return (\n       <div style={setstyle} class=\"todo-list\">\n       <h2 >{hours} {flag}</h2>\n       <h2 >Good {timeday}</h2>\n       {/*<Contactcard \n       imgurl=\"./meme_brain.jpg\" \n       name=\"meme_brain\" \n       phone=\"123454321\" \n       email=\"nguyenngochuyena8@gmail.com\" />*/\n}\n{\n  /*<Contactcard \n  contact ={{name :\"ngoc huyen\",\n  imgurl:\"./oriental.jpg\", \n  phone:\"123454321\", \n  email:\"nguyenngochuyena8@gmail.com\"}}/>\n  <hr/>\n  <Joke question= \"What time is it?\" answer=\"7AM\" />\n  <Joke answer=\"7AM\" />\n  </div>\n  <hr/>\n  <div>\n  {jokeComponent}\n  </div>\n        \n  )\n  }\n  export default App;*/\n}","map":{"version":3,"sources":["C:/Users/nguye/rapp/src/App.js"],"names":["React","TodoItem","Contactcard","Productitem","Product","todoData","ReactCSSTransitionGroup","require","App","productComponent","map","item","id","todoComponent","todo","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,YAAxB,C,CACA;AACA;;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,IAAIC,uBAAuB,GAAGC,OAAO,CAAC,mCAAD,CAArC,C,CACA;;;AACA,SAASC,GAAT,GAAc;AACZ,QAAMC,gBAAgB,GAAGN,WAAW,CAACO,GAAZ,CAAgBC,IAAI,iBAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAGA,IAAI,CAACC,EAApB;AAAwB,IAAA,OAAO,EAAED,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAAzB;AACA,QAAME,aAAa,GAAGR,QAAQ,CAACK,GAAT,CAAaI,IAAI,iBAAG,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAGA,IAAI,CAACF,EAArB;AAAyB,IAAA,IAAI,EAAGG,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CAAtB;AACF,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEN,gBAFF,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAMEI,aANF,CADA;AAWC;;AACD,eAAeL,GAAf,C,CACA;;AACA;AAAC;;;;;;;;;AASE;AAEH;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BE;AACH;AAAC;AAAiB;AAClB;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DE;AACH;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCE;AAEH;AAAC;;;;;;AAKE;AACH;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCG;AACJ;AAAC;;;;;;;;;;;;;;;;;;;;;;;;AAuBG;AACJ;AAAC;;;;;;;;;;;;;;;;;;;AAkBE;AACH;AAAC;;;;;;;;;;;;;;;;;;;;AAsBE;AACH;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDE;AACH;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDG;AACJ;AAAC;;;;;;;;;;;;;;;;;AAiBkC;AAC7B;AAAC;;;;;;;;;;;;;;;;;;AAkBJ;AACH;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BG;AACJ;AAAC;AAAiB;AAClB;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCqB;AACtB;AAAC;;;;;;;;;;;;;;;;;;;;AAmBE;AACH;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCG;AACJ;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwC8C;AACzC;AAAC;;;;;;;;;;;;;;;;;AAkBe","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TodoItem from './TodoItem'\nimport Contactcard from './TodoItem'\n//import Joke from './Joke'\n//import JokesData from './JokesData'\nimport Productitem from './SchoolProduct'\nimport Product from './Product'\nimport todoData from './todoData'\nvar ReactCSSTransitionGroup = require('react-addons-css-transition-group');\n// mapping component practice\nfunction App(){\n  const productComponent = Productitem.map(item => <Product key ={item.id} product={item}/>)\n  const todoComponent = todoData.map(todo=> <TodoItem key ={todo.id} todo ={items}/>)\nreturn(\n<div>\n{\n  productComponent\n}\n<hr/>\n{\n  todoComponent\n}\n</div>\n  )\n}\nexport default App\n//import Header from 'header.js'\n{/*\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '/actions/actions'\n\nimport AddTodo from '/components/AddTodo.js'\nimport TodoList from '/components/TodoList.js'\n*/}\n\n{/*\nclass Tablerow extends React.Component {\n   render() {\n      return (\n         <tr>\n            <td>{this.props.data.id}</td>\n            <td>{this.props.data.name}</td>\n            <td>{this.props.data.age}</td>\n         </tr>\n      );\n   }\n}\nclass Header extends React.Component{\n  render(){\n    return(\n      <div>\n      <h1>React Component</h1>\n      </div>\n      );\n  }\n}\nclass Content extends React.Component{\n  render(){\n    return(\n      <div>\n      <h2>Content</h2>\n      <p>this is content</p>\n      </div>\n      );\n  }\n}\n*/}\n{/*React state */}\n{/*\nclass showData extends React.Component{\n  constructor(props){\n    super(props);\n    this.state= {\n      header: \"Header from state\",\n      footer: \"Footer from state\"\n\n    }\n  }\n  render(){\n    return(\n    <div>\n    <Header/>\n    <h1>{this.state.header}</h1>\n    <h2>{this.state.footer}</h2>\n    </div>\n    );\n  }\n}\n\nclass App extends React.Component{\n  \n      constructor(){\n    super();\n   this.state = {\n         data: \n         [\n            {\n               \"id\":1,\n               \"name\":\"Foo\",\n               \"age\":\"20\"\n            },\n            {\n               \"id\":2,\n               \"name\":\"Bar\",\n               \"age\":\"30\"\n            },\n            {\n               \"id\":3,\n               \"name\":\"Baz\",\n               \"age\":\"40\"\n            }\n         ]\n      }\n   }\n   render() {\n      return (\n         <div>\n            <Header/>\n            <table>\n               <tbody>\n                  {this.state.data.map((person, i) => <Tablerow key = {i} \n                     data = {person} />)}\n               </tbody>\n            </table>\n\n         </div>\n      );\n   }\n      \n}\n*/}\n{/*-- Props Overview\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state ={\n      header:\"Header from props\",\n      footer: \"Footer from props\"\n    }\n  }\n  render(){\n    return(\n      <div>\n      <Xeader headerprops = {this.state.header}/>\n      <Xooter footerprops = {this.state.footer}/>\n      </div>\n      );\n  }\n}\nclass Xeader extends React.Component{\n  render(){\n    return(\n        <div>\n        <h2>{this.props.headerprops}</h2>\n        </div>\n      );\n  }\n}\nclass Xooter extends React.Component{\n  render(){\n    return(\n      <div>\n      <h3>{this.props.footerprops}</h3>\n      </div>\n      );\n  }\n}\n*/}\n\n{/* default props \nApp.defaultProps = {\n   headerProp: \"Header from props...\",\n   contentProp:\"Content from props...\"\n}\n*/}\n{/* Prop validatation\nclass App extends React.Component{\n  render(){\n    return(\n      <div>\n      <h3>Array: {this.props.propArray}</h3>\n      <h3>Bool: {this.props.propBool ? \"true\":\"false\"}</h3>\n      <h3>Func: {this.props.propFunc(3)}</h3>\n      <h3>Number: {this.props.propNumber}</h3>\n      <h3>String: {this.props.propString}</h3>\n      <h3>Object:{this.props.propObject.object1}</h3>\n      <h3>Object: {this.props.propObject.object2}</h3>\n      </div>\n\n      );\n  }\n}\nApp.propTypes={\n   propArray: PropTypes.array.isRequired,\n  propBool: PropTypes.bool.isRequired,\n  propFunc: PropTypes.func,\n  propNumber: PropTypes.number,\n  propString: PropTypes.string,\n  propObject: PropTypes.object\n}\n App.defaultProps ={\n  propArray: [1,2,3,4,5],\n  propBool: true,\n  propFunc: function(e){return e},\n  propString:\"Ngoc Huyen Nguyen\",\n  propNumber: 12,\n  propObject: {\n    object1: \"Ngoc Huyen\",\n    object2: \"ngoc huyen nguyen\"\n  }\n}*/}\n{/* Set State\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state= {\n      data:[]\n    }\n    this.setStateHandler = this.setStateHandler.bind(this);\n  };\n  setStateHandler(){\n    var item = \"setState\"\n    var myArray = this.state.data.slice();\n    myArray.push(item);\n    this.setState({data:myArray})\n  };\n  render(){\n    return(\n        <div>\n        <button onClick ={this.setStateHandler}>Set State</button>\n        <h3> State Array: {this.state.data}</h3>\n        </div>\n      );\n  }\n}*/}\n{/* Force Update\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n  };\n  forceUpdateHandler(){\n    this.forceUpdate();\n  };\n  render(){\n    return(\n      <div>\n      <button onClick ={this.forceUpdateHandler}>force update</button>\n      <h3>random number: {Math.random()}</h3>\n      </div>\n      );\n  }\n}\n*/}\n{/* Find dom node \n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.findDomNodeHandler = this.findDomNodeHandler.bind(this);\n\n  };\n  findDomNodeHandler(){\n    var myDiv = document.getElementById('myDiv');\n    ReactDOM.findDOMNode(myDiv).style.color='green';\n  }\n  render(){\n    return(\n      <div>\n      <button onClick ={this.findDomNodeHandler}>Find Dome Node</button>\n        <div id= \"myDiv\"> Node</div>\n        </div>\n\n      );\n  }\n}\n*/}\n{/*props validation\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      data: 0\n    }\n    this.setNewNumber = this.setNewNumber.bind(this)\n  };\n  setNewNumber(){\n    this.setState({data:this.state.data +1})\n  }\n  render(){\n    return(\n      <div>\n      <button onClick={this.setNewNumber}>Increment value</button>\n      <Content myNumber = {this.state.data}></Content>\n      </div>\n      );\n  }\n}\nclass Content extends React.Component{\n  componentWillMount() {\n    console.log('Component will mount')\n  }\n  componentDidMount() {\n    console.log('Component dis mount')\n  }\n  componentWillReceiveProps(newProps){\n    console.log('component will receive props')\n  }\n  shouldComponentUpdate(newProps, newState){\n    return true;\n  }\n  componentWillUpdate(nextProps, nextState){\n    console.log('component will update')\n  }\n  componentDidUpdate(prevProps, prevState){\n    console.log('component did update')\n  }\n  componentWillUnmount(){\n    console.log('component will unmount')\n  }\n  render(){\n    return(\n      <div>\n      <h3>{this.props.myNumber}</h3>\n      </div>\n      );\n  }\n}\n*/}\n{/* simple example if reacjs -form\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      data: 'input value, change it'\n    }\n    this.updateState= this.updateState.bind(this)\n  }\n  updateState(e){\n    this.setState({data:e.target.value});\n  }\n  render(){\n    return(\n      <div>\n      <input type =\"text\" value={this.state.data} onChange={this.updateState}/>\n      <h3>{this.state.data}</h3>\n      </div>\n\n      );\n  }\n}\n--complex example reactjs-form\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      data: 'change text'\n    }\n      this.updateState=this.updateState.bind(this);\n  }\n  updateState(e){\n    this.setState({data:e.target.value});\n  }\n  render(){\n    return(\n      <div>\n      <Content dataprop={this.state.data}\n      updatedataprops ={this.updateState}></Content>\n      </div>\n\n      );\n  }\n}\nclass Content extends React.Component{\n  render(){\n    return(\n      <div>\n      <input type = \"text\" value={this.props.dataprop} \n      onChange = {this.props.updatedataprops}/>\n      <h3>{this.props.dataprop}</h3>\n      </div>\n\n      );\n  }\n}*/}\n{/*reactjs-events, \n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      data:'input data'\n    }\n    this.updateState  = this.updateState.bind(this);\n  }\n  updateState(){\n    this.setState({data:'Data updated'})\n  }\n  render(){\n    return(\n      <div>{/* \n      <button onClick={this.updateState}>Click</button>\n      <h3>{this.state.data}</h3>*/}\n      {/*\n      <Content dataprops={this.state.data}\n      updateStateProps = {this.updateState}></Content>\n\n      </div>\n      );\n  }\n}\nclass Content extends React.Component{\n  render(){\n    return(\n    <div>\n    <button onClick ={this.props.updateStateProps}>Click</button>\n    <h3>{this.props.dataprops}</h3>\n    </div>\n    );\n  }\n} \n*/}\n{/*reactjs-Refs\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      data:''\n    }\n    this.updateState= this.updateState.bind(this);\n    this.clearInput= this.clearInput.bind(this);\n  }\n  updateState(e){\n    this.setState ({data: e.target.value});\n  }\n  clearInput(){\n    this.setState({data:''});\n    ReactDOM.findDOMNode(this.refs.Input).focus();\n  }\n  render(){\n    return(\n      <div>\n      <input  value={this.state.data} onChange={this.updateState}\n      ref=\"Input\"/>\n      <button onClick={this.clearInput}>Clear</button>\n      <h4>{this.state.data}</h4>\n      </div>\n      );\n  }\n}*/}\n{/*reactjs-keys*/}\n{/*\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      data:[\n      {\n      id: 1,\n      name: 'Ngoc Huyen'\n      },\n      {\n      id: 2,\n      name: 'Erin Abbey'\n      },\n      {\n      id: 3,\n      name: 'Jk'\n      }\n      ]\n    }\n  }\n  render(){\n    return(\n      <div>\n      <div>{this.state.data.map((dynamicComponent, i)=><Content key={i}componentData={dynamicComponent}/>)}\n      </div>\n      </div>\n\n      );\n  }\n}\n  class Content extends React.Component{\n  render(){\n    return(\n      <div>\n      <div>{this.props.componentData.id}</div>\n      <div>{this.props.componentData.name}</div>\n      </div>\n      );\n  }\n}\nexport default App;*/}\n{/*\nclass App extends Component {\n   render() {\n      const { dispatch, visibleTodos } = this.props\n      \n      return (\n         <div>\n            <AddTodo onAddClick = {text =>dispatch(addTodo(text))} />\n            <TodoList todos = {visibleTodos}/>\n         </div>\n      )\n   }\n}\nfunction select(state) {\n   return {\n      visibleTodos: state.todos\n   }\n}\nexport default connect(select)(App);\n*/}\n{/*\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      data: ['Erin Abbey', 'Nguyen Ngoc Huyen', 'Jvf']\n    }\n    this.handledAdd = this.handledAdd.bind(this);\n  };\n  handledAdd(){\n    var newitem = this.state.data.concat([prompt('Add new item')]);\n    this.setState ({data: newitem});\n  }\n  handledRemove(i){\n    var newitem = this.state.data.slice();\n    newitem.splice(i, 1);\n    this.setState({data: newitem});\n  }\n  render(){\n    var data = this.state.data.map(function(item, i){\n      return(\n        <div key = {item} onClick = {this.handledRemove.bind(this,  i)}>{item}</div>\n        );\n      }.bind(this));\n    \n    return(\n    <div>\n    <button onClick = {this.handledAdd}>Add item</button>\n    <ReactCSSTransitionGroup transitionName = \"example\" transitionEnterTimeout ={500} transitionLeaveTimeout ={500}>\n    {data}</ReactCSSTransitionGroup>\n    </div>\n    );\n  }\n}*/}\n{/*\nfunction App()  {\n \n    const date = new Date()\n    const hours = date.getHours()\n    const setstyle={\n      color: \"blue\",\n      backgroundColor: \"lightgray\",\n      fontSize: \"14px\",\n      margin: \"14px 16px\"\n    }\n    \n    const jokeComponent = JokesData.map(joke => <Joke key ={joke.id} question={joke.question} answer = {joke.answer}/>)\n\n    console.log(doubled)\n    let timeday\n    let flag\n    if(hours < 12){\n      timeday =\"morning\"\n      flag =\"AM\"\n      setstyle.color= \"blue\"\n    }\n    else if(hours >12 && hours <18){\n      timeday =\"afternoon\"\n      setstyle.color= \"green\"\n      flag =\"PM\"\n    }\n    else{\n      timeday=\"night\"\n      setstyle.color= \"green\"\n      flag =\"PM\"\n    }\n    return (\n      <div style={setstyle} class=\"todo-list\">\n      <h2 >{hours} {flag}</h2>\n      <h2 >Good {timeday}</h2>\n      {/*<Contactcard \n      imgurl=\"./meme_brain.jpg\" \n      name=\"meme_brain\" \n      phone=\"123454321\" \n      email=\"nguyenngochuyena8@gmail.com\" />*/}\n      {/*<Contactcard \n      contact ={{name :\"ngoc huyen\",\n       imgurl:\"./oriental.jpg\", \n       phone:\"123454321\", \n       email:\"nguyenngochuyena8@gmail.com\"}}/>\n       <hr/>\n       <Joke question= \"What time is it?\" answer=\"7AM\" />\n       <Joke answer=\"7AM\" />\n       </div>\n       <hr/>\n       <div>\n       {jokeComponent}\n       </div>\n      \n      \n    )\n  }\n\nexport default App;*/}\n\n\n"]},"metadata":{},"sourceType":"module"}